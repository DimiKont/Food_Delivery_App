DROP DATABASE IF EXISTS Online_Food_Order_Delivery;
CREATE DATABASE Online_Food_Order_Delivery;
USE Online_Food_Order_Delivery;

CREATE TABLE User (
	ID INT PRIMARY KEY AUTO_INCREMENT,
    USERNAME VARCHAR(50),
    PASSWORD VARCHAR(50),
    EMAIL VARCHAR(50) UNIQUE,
    USER_TYPE VARCHAR(50)
);

CREATE TABLE Customer (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    USERNAME VARCHAR(50),
    PASSWORD VARCHAR(50),
    -- NAME VARCHAR(50),
    ADDRESS VARCHAR(50),
    FOREIGN KEY (ID) REFERENCES User(ID)
    -- FOREIGN KEY (PASSWORD) REFERENCES User(PASSWORD) 
);

CREATE TABLE Restaurant (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    USERNAME VARCHAR(50),
    PASSWORD VARCHAR(50),
    NAME VARCHAR(50),
    LOCATION VARCHAR(50),
    CUISINE_TYPE VARCHAR(50),
    RATING FLOAT(10,2),
    FOREIGN KEY (ID) REFERENCES User(ID)
    -- FOREIGN KEY (PASSWORD) REFERENCES User(PASSWORD)
);

CREATE TABLE Driver (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    USERNAME VARCHAR(50),
    PASSWORD VARCHAR(50),
    -- NAME VARCHAR(50),
    PHONE_NUMBER VARCHAR(50),
    FOREIGN KEY (ID) REFERENCES User(ID)
    -- FOREIGN KEY (PASSWORD) REFERENCES User(PASSWORD)
);

CREATE TABLE Administrator (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    USERNAME VARCHAR(50),
    PASSWORD VARCHAR(50),
    FOREIGN KEY (ID) REFERENCES User(ID)
    -- FOREIGN KEY (PASSWORD) REFERENCES User(PASSWORD)
);

CREATE TABLE Menu(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    RESTAURANT_ID INT,
    NAME VARCHAR(50),
    PRICE FLOAT(10,2),
    CATEGORY VARCHAR(50),
    FOREIGN KEY (RESTAURANT_ID) REFERENCES Restaurant(ID)
);

CREATE TABLE Orders(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    CUSTOMER_ID INT,
    RESTAURANT_ID INT,
    DRIVER_ID INT,
    QUANTITY INT,
    TOTAL_PRICE FLOAT(10,2),
    STATUS VARCHAR(50),
    FOREIGN KEY (CUSTOMER_ID) REFERENCES Customer(ID),
    FOREIGN KEY (RESTAURANT_ID) REFERENCES Restaurant(ID),
    FOREIGN KEY (DRIVER_ID) REFERENCES Driver(ID)
);

DELIMITER //
CREATE TRIGGER capitalize
BEFORE INSERT ON CUSTOMER
FOR EACH ROW
BEGIN
    SET NEW.ADDRESS = CONCAT(UPPER(SUBSTRING(NEW.ADDRESS, 1, 1)), LOWER(SUBSTRING(NEW.ADDRESS, 2)));
END //
DELIMITER ;

INSERT INTO User(USERNAME, PASSWORD, EMAIL, USER_TYPE) VALUES 
('admin', 'admin1234', "admin@gmail.com", "Admin"),
('manos', 'manos1234', "manos@gmail.com", "Restaurant"),
('aggelos', 'aggelos1234', "aggelos@gmail.com", "Restaurant");
-- ('frottori', 'frosso1234'),
-- ('tsosmi', 'dimitris1234'),
-- ('filegeiasou', 'aggelos1234');

SELECT * FROM USER;
SELECT * FROM CUSTOMER;
SELECT * FROM DRIVER;
SELECT * FROM RESTAURANT;
SELECT * FROM MENU;
SELECT * FROM ORDERS;

# Admins will probably just be in the database and can only sign in.
INSERT INTO ADMINISTRATOR(USERNAME, PASSWORD) VALUES ("admin", "admin1234");

# ΕΝΔΕΙΚΤΙΚΑ
INSERT INTO Restaurant(USERNAME, PASSWORD, NAME, LOCATION, CUISINE_TYPE, RATING) VALUES ("manos", "manos1234", "Misafir", "Athens", "Turkish", 4);
INSERT INTO Restaurant(USERNAME, PASSWORD, NAME, LOCATION, CUISINE_TYPE, RATING) VALUES ("aggelos", "aggelos1234", "Elliniko", "Athens", "Greek", 4.5);

# MENU FOR MISAFIR
INSERT INTO Menu(RESTAURANT_ID, NAME, PRICE, CATEGORY) 
VALUES 
(1, "Kebab", 5, "Main"),
(1, "Baklava", 3, "Dessert"),
(1, "Raki", 4, "Drink"),
(1, "Kokoretsi", 6, "Main");
